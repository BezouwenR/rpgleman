.\" Copyright 2017 Andreas Louv <andreas@louv.dk>
.\" All content is copyright IBM
.\" Original URL: https://www.ibm.com/support/knowledgecenter/ssw_ibm_i_73/rzasd/bbdif.htm?view=embed
.\"
.\" This man page is generated with ``rpgleman''
.\" Project URL: https://github.com/andlrc/rpgleman
.\"
.TH DIFF 3RPG  "June 2012" "ILE RPG Language Reference"
.SH NAME
%DIFF - Difference Between Two Date, Time, or Timestamp Values
.SH SYNOPSIS
.nf
%DIFF(op1 : op2 : unit {: frac })
.fi
.SH DESCRIPTION


The unit can be \fI*MSECONDS\fR, \fI*SECONDS\fR, \fI*MINUTES\fR, \fI*HOURS\fR, \fI*DAYS\fR,
\fI*MONTHS\fR, or \fI*YEARS\fR\[char46] You can also use the following abbreviated forms of the
unit: \fI*MS\fR, \fI*S\fR, \fI*MN\fR, \fI*H\fR, \fI*D\fR, \fI*M\fR, or \fI*Y\fR\[char46]


\fB%DIFF\fR produces the difference (duration) between two date or time
values\[char46] The first and second parameters must have the same, or compatible types\[char46]  The following combinations are possible: 
.IP "" 2
.RS
\[bu] Date and date
.RE
.IP "" 2
.RS
\[bu] Time and time
.RE
.IP "" 2
.RS
\[bu] Timestamp and timestamp
.RE
.IP "" 2
.RS
\[bu] Date and timestamp (only the date portion of the timestamp is considered)
.RE
.IP "" 2
.RS
\[bu] Time and timestamp (only the time portion of the timestamp is considered)\[char46]
.RE
.PP


The third parameter specifies the unit\[char46] The following units are
valid: 
.IP "" 2
.RS
\[bu] For two dates or a date and a timestamp: \fI*DAYS\fR, \fI*MONTHS\fR, and
\fI*YEARS\fR
.RE
.IP "" 2
.RS
\[bu] For two times or a time and a timestamp: \fI*SECONDS\fR, \fI*MINUTES\fR, and
\fI*HOURS\fR
.RE
.IP "" 2
.RS
\[bu] For two timestamps: \fI*MSECONDS\fR, \fI*SECONDS\fR, \fI*MINUTES\fR, \fI*HOURS\fR, \fI*DAYS\fR,
\fI*MONTHS\fR, and \fI*YEARS\fR
.RE
.PP


The results for \fI*MONTHS\fR and \fI*YEARS\fR may be surprising\[char46] See Unexpected
Results\[char46]


If the third operand is \fI*SECONDS\fR or \fI*S\fR, and both of the operands are timestamps, you can
specify a fourth parameter indicating the number of fractional seconds to return\[char46] You can
specify a value between 0 and 12\[char46] This represents the number of decimal positions in the
returned number of seconds\[char46]


The difference is calculated by subtracting the second operand from the first\[char46]


The result is rounded down, with any remainder discarded\[char46] For example, 61 minutes is equal
to 1 hour, and 59 minutes is equal to 0 hours\[char46]


The value returned by the function is compatible with both type numeric and type duration\[char46]
You can add the result to a number (type numeric) or a date, time, or timestamp (type
duration)\[char46]


If you ask for the difference in microseconds between two timestamps that are more than 32 years 9
months apart, you will exceed the 15-digit limit for duration values\[char46] This will result in an
error or truncation\[char46] However, you can obtain the number of microseconds between any two
dates by asking for the difference in seconds with 6 fractional seconds, and then multiply the
resulting value by 1000000\[char46] For example, if the difference in seconds is
1041379205\[char46]123456, then the difference in microseconds is 1041379205123456\[char46]


For more information, see Date Operations or Built-in Functions\[char46]

.SH EXAMPLE
Using the result of \fB%DIFF\fR as a numeric value
.PP
.nf
D due_date        S               D   INZ(D\[char39]2005-06-01\[char39])
D today           S               D   INZ(D\[char39]2004-09-23\[char39])
D num_days        S             15P 0

D start_time      S               Z

D time_taken      S             15P 0

 /FREE

     // Determine the number of days between two dates\[char46]

     // If due_date has the value 2005-06-01 and
     // today has the value 2004-09-23, then
     // num_days will have the value 251\[char46]

     num_days = %DIFF (due_date: today: *DAYS);

     // If the arguments are coded in the reverse order,
     // num_days will have the value -251\[char46]

     num_days = %DIFF (today: due_date: *DAYS);

     // Determine the number of seconds required to do a task:
     //  1\[char46] Get the starting timestamp
     //  2\[char46] Do the task
     //  3\[char46] Calculate the difference between the current
     //     timestamp and the starting timestamp

     start_time = %timestamp();
     process();
     time_taken = %DIFF (%timestamp() : start_time : *SECONDS);

 /END-FREE
.fi

.SH EXAMPLE
Using the result of \fB%DIFF\fR as a duration
.PP
.nf
D estimated_end\[char46]\[char46]\[char46]
D                 S               D
D prev_start      S               D   INZ(D\[char39]2003-06-21\[char39])
D prev_end        S               D   INZ(D\[char39]2003-06-24\[char39])

 /FREE

     // Add the number of days between two dates
     // to a third date

     // prev_start is the date a previous task began
     // prev_end is the date a previous task ended\[char46]

     // The following calculation will estimate the
     // date a similar task will end, if it begins
     // today\[char46]

     // If the current date, returned by %date(), is
     // 2003-08-15, then estimated_end will be
     // 2003-08-18\[char46]

     estimated_end = %date() + %DIFF(prev_end : prev_start : *days);

 /END-FREE
.fi
.SH SEE ALSO
.BR %DATE,
.BR %TIMESTAMP,
.BR AYS,
.BR EARS,
.BR ECONDS,
.BR END-FREE,
.BR FREE,
.BR INUTES,
.BR INZ,
.BR ONTHS,
.BR OURS,
.BR SECONDS
