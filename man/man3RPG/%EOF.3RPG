.\" Copyright 2017 Andreas Louv <andreas@louv.dk>
.\" All content is copyright IBM
.\" Original URL: https://www.ibm.com/support/knowledgecenter/ssw_ibm_i_73/rzasd/bbeof.htm?view=embed
.\"
.\" This man page is generated with ``rpgleman''
.\" Project URL: https://github.com/andlrc/rpgleman
.\"
.TH EOF 3RPG  "June 2012" "ILE RPG Language Reference"
.SH NAME
%EOF - Return End or Beginning of File Condition
.SH SYNOPSIS
.nf
%EOF{(file_name)}
.fi
.SH DESCRIPTION
The operations that set \fB%EOF\fR are: 
.IP "" 2
.RS
\[bu] \fIREAD\fR (Read a Record)
.RE
.IP "" 2
.RS
\[bu] \fIREADC\fR (Read Next Changed Record)
.RE
.IP "" 2
.RS
\[bu] \fIREADE\fR (Read Equal Key)
.RE
.IP "" 2
.RS
\[bu] \fIREADP\fR (Read Prior Record)
.RE
.IP "" 2
.RS
\[bu] \fIREADPE\fR (Read Prior Equal)
.RE
.IP "" 2
.RS
\[bu] \fIWRITE\fR (Create New Records)  (subfile only)\[char46]
.RE
.PP


The following operations, if successful, set \fB%EOF(filename)\fR off\[char46] If the operation is
not successful, \fB%EOF(filename)\fR is not changed\[char46] \fB%EOF\fR with no parameter is not
changed by these operations\[char46] 
.IP "" 2
.RS
\[bu] \fICHAIN\fR (Random Retrieval from a File)
.RE
.IP "" 2
.RS
\[bu] \fIOPEN\fR (Open File for Processing)
.RE
.IP "" 2
.RS
\[bu] \fISETGT\fR (Set Greater Than)
.RE
.IP "" 2
.RS
\[bu] \fISETLL\fR (Set Lower Limit)
.RE
.PP


When a full-procedural file is specified, this function returns \[char39]1\[char39] if the previous
operation in the list above, for the specified file, resulted in an end of file or beginning of file
condition\[char46] For primary and secondary files, \fB%EOF\fR is available only if the file name is
specified\[char46] It is set to \[char39]1\[char39] if the most recent input operation during
\fI*GETIN\fR processing resulted in an end of file or beginning of file condition\[char46]
Otherwise, it returns \[char39]0\[char39]\[char46]


This function is allowed for input, update, and record-address files; and for display files allowing
\fIWRITE\fR to subfile records\[char46]


For more information, see File Operations or Built-in Functions\[char46]

.SH RETURN VALUE
\fB%EOF\fR returns \[char39]1\[char39] if the most recent read operation or write to a subfile ended
in an end of file or beginning of file condition; otherwise, it returns \[char39]0\[char39]\[char46]

.SH EXAMPLE
\fB%EOF\fR without a Filename Parameter
.PP
.nf
 *\[char46]\[char46]1\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]2\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]3\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]4\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]5\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]6\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]7\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]
F*Filename+IPEASFRlen+LKlen+AIDevice+\[char46]Keywords+++++++++++++++++++++++++
 * File INFILE has record format INREC
FINFILE    IF   E             DISK

 /FREE
    READ INREC;  // read a record
    IF  %EOF;
                 // handle end of file
    ENDIF;
 /END-FREE
.fi

.SH EXAMPLE
\fB%EOF\fR with a Filename Parameter
.PP
.nf
 *\[char46]\[char46]1\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]2\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]3\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]4\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]5\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]6\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]7\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]
 * This program is comparing two files

F*Filename+IPEASFRlen+LKlen+AIDevice+\[char46]Keywords+++++++++++++++++++++++++
FFILE1     IF   E             DISK
FFILE2     IF   E             DISK

 * Loop until either FILE1 or FILE2 has reached end-of-file
 /FREE
    DOU %EOF(FILE1) OR %EOF(FILE2);
       // Read a record from each file and compare the records

       READ REC1;
       READ REC2;
       IF %EOF(FILE1) AND %EOF(FILE2);
          // Both files have reached end-of-file
          EXSR EndCompare;

       ELSEIF %EOF(FILE1);
          // FILE1 is shorter than FILE2
          EXSR F1Short;

       ELSEIF %EOF(FILE2);
          // FILE2 is shorter than FILE1
          EXSR F2Short;

       ELSE;
          // Both files still have records to be compared
          EXSR CompareRecs;
       ENDIF;
    ENDDO;
  // \[char46]\[char46]\[char46]
 /END-FREE
.fi
.SH SEE ALSO
.BR AID,
.BR AND,
.BR CHAIN,
.BR DISK,
.BR DOU,
.BR ELSE,
.BR ELSEIF,
.BR END-FREE,
.BR ENDDO,
.BR ENDIF,
.BR ETIN,
.BR EXSR,
.BR FFILE,
.BR FILE,
.BR FINFILE,
.BR FREE,
.BR INFILE,
.BR INREC,
.BR IPEASFR,
.BR OPEN,
.BR READ,
.BR READC,
.BR READE,
.BR READP,
.BR READPE,
.BR REC,
.BR SETGT,
.BR SETLL,
.BR WRITE
