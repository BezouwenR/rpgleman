.\" Copyright 2017 Andreas Louv <andreas@louv.dk>
.\" All content is copyright IBM
.\" Original URL: https://www.ibm.com/support/knowledgecenter/ssw_ibm_i_73/rzasd/bbnot.htm?view=embed
.\"
.\" This man page is generated with ``rpgleman''
.\" Project URL: https://github.com/andlrc/rpgleman
.\"
.TH BITNOT 3RPG  "June 2012" "ILE RPG Language Reference"
.SH NAME
%BITNOT - Invert Bits
.SH SYNOPSIS
.nf
%BITNOT(expr)
.fi
.SH DESCRIPTION
The argument to this built-in function can be either character or numeric\[char46] For numeric
arguments, if they are not integer or unsigned, they are first converted to integer\[char46] If the
value does not fit in an 8-byte integer, a numeric overflow exception is issued\[char46]


\fB%BITNOT\fR takes just one argument\[char46] The result type is the same as the types of the
arguments\[char46] For numeric arguments, the result is unsigned if all arguments are unsigned, and
integer otherwise\[char46]


The length is the length of the largest operand\[char46] If the arguments have different lengths,
they are padded on the left with bit zeros for numeric arguments\[char46]


\fB%BITNOT\fR can be coded in any expression\[char46] It can also be coded as the argument to a File
or Definition Specification keyword if all arguments are known at compile-time\[char46] If all
arguments of this built-in function are hex literals, the compiler produces a constant-folded result
that is a hex literal\[char46]


 Please see Figure 1 for an example demonstrating the use of \fB%BITNOT\fR\[char46]


For more information, see Bit Operations or Built-in Functions\[char46]

.SH RETURN VALUE
\fB%BITNOT\fR returns the bit-wise inverse of the bits of the argument\[char46] That is, the result
bit is ON when the corresponding bit in the argument is \fIOFF\fR, and \fIOFF\fR otherwise\[char46]

.SH SEE ALSO
.BR OFF
