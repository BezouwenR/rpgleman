.\" Copyright 2017 Andreas Louv <andreas@louv.dk>
.\" All content is copyright IBM
.\" Original URL: https://www.ibm.com/support/knowledgecenter/ssw_ibm_i_73/rzasd/zzin.htm?view=embed
.\"
.\" This man page is generated with ``rpgleman''
.\" Project URL: https://github.com/andlrc/rpgleman
.\"
.TH IN 3RPG  "June 2012" "ILE RPG Language Reference"
.SH NAME
IN - Retrieve a Data Area
.SH DESCRIPTION
.TS
allbox;
l l  .
T{
Free-Form Syntax
T}	T{
IN{(E)} {\fI*LOCK\fR} data-area-name
T}
.TE

.TS
allbox;
l l l l l l l  .
T{
IN (E)
T}	T{
\fI*LOCK\fR
T}	T{
data-area-name
T}	T{
Ã‚
T}	T{
_
T}	T{
ER
T}	T{
_
T}
.TE

The IN operation retrieves a data area and optionally allows you to specify whether the data area is to be locked from update by another program\[char46] For a data area to be retrieved by the IN operation, it must be specified in the result field of an \fI*DTAARA\fR \fIDEFINE\fR statement or using the \fIDTAARA\fR keyword on the Definition specification\[char46] (See \fIDEFINE\fR (Field Definition) for information on \fI*DTAARA\fR \fIDEFINE\fR operation and the Definition Specification for information on the \fIDTAARA\fR keyword)\[char46]


If name of the data area is determined at runtime because \fIDTAARA\fR(\fI*VAR\fR) was specified on the definition of the field, then the variable containing the name of the data area must be set before the IN operation\[char46] However, if the data area is already locked due to a prior \fI*LOCK\fR IN operation, the variable containing the name will not be consulted; instead, the previously locked data area will be used\[char46]


The reserved word \fI*LOCK\fR can be specified in Factor 1 to indicate that the data area cannot be updated or locked by another program until (1) an \fIUNLOCK\fR operation is processed, (2) an \fIOUT\fR operation with no data-area-name operand specified, or (3) the \fIRPG\fR IV program implicitly unlocks the data area when the program ends


\fI*LOCK\fR cannot be specified when the data-area-name operand is the name of the local data area or the Program Initialization Parameters (\fIPIP\fR) data area\[char46]


You can specify a \fI*LOCK\fR IN statement for a data area that the program has locked\[char46] When data-area-name is not specified, the lock status is the same as it was before the data area was retrieved: If it was locked, it remains locked; if unlocked, it remains unlocked\[char46]


data-area-name must be the name of a definition defined with the \fIDTAARA\fR keyword, the result field of a \fI*DTAARA\fR \fIDEFINE\fR operation, or the reserved word \fI*DTAARA\fR\[char46]\[char46] When \fI*DTAARA\fR is specified, all data areas defined in the program are retrieved\[char46] If an error occurs on the retrieval of a data area (for example, a data area can be retrieved but cannot be locked), an error occurs on the IN operation and the \fIRPG\fR IV exception/error handling routine receives control\[char46] If a message is issued to the requester, the message identifies the data area in error\[char46]


To handle IN exceptions (program status codes 401-421, 431, or 432), either the operation code extender \[char39]E\[char39] or an error indicator ER can be specified, but not both\[char46] For more information on error handling, see Program Exception/Errors\[char46]


On a fixed-form calculation, positions 71-72 and 75-76 must be blank\[char46]


For further rules for the IN operation, see Data-Area Operations\[char46]

.SH EXAMPLE
IN and \fIOUT\fR Operations
.PP
.nf
 *\[char46]\[char46]1\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]2\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]3\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]4\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]5\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]6\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]7\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]
 * Define Data areas
D TotAmt          s              8p 2 dtaara
D TotGrs          s             10p 2 dtaara
D TotNet          s             10p 2 dtaara

 *  TOTAMT, TOTGRS, and TOTNET are defined as data areas\[char46]  The IN
 *  operation retrieves all the data areas defined in the program
 *  and locks them\[char46]  The program processes calculations, and at
 *  LR time it writes and unlocks all the data areas\[char46]
 *  The data areas can then be used by other programs\[char46]

 /free

      in *lock *dtaara;
      TotAmt = TotAmt + Amount;
      TotGrs = TotGrs + Gross;
      TotNet = TotNet + Net;

 /end-free
 * To start total calcs, code a fixed format calc statement with a
 * level entry specified\[char46]
CL0   total_calcs   tag
 /free

      if *inlr
         out *dtaara
      endif
 /end-free
.fi
