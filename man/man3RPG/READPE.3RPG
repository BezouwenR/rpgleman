.\" Copyright 2017 Andreas Louv <andreas@louv.dk>
.\" All content is copyright IBM
.\" Original URL: https://www.ibm.com/support/knowledgecenter/ssw_ibm_i_73/rzasd/zzredpe.htm?view=embed
.\"
.\" This man page is generated with ``rpgleman''
.\" Project URL: https://github.com/andlrc/rpgleman
.\"
.TH READPE 3RPG  "June 2012" "ILE RPG Language Reference"
.SH NAME
READPE - Read Prior Equal
.SH DESCRIPTION
.TS
allbox;
l l  .
T{
Free-Form Syntax
T}	T{
\fIREADPE\fR{(\fIENHMR\fR)} search-arg|\fI*KEY\fR name {data-structure}
T}
.TE

.TS
allbox;
l l l l l l l  .
T{
\fIREADPE\fR (E N)
T}	T{
search-arg
T}	T{
name (file or record format)
T}	T{
data-structure
T}	T{
_
T}	T{
ER
T}	T{
\fIBOF\fR
T}
.TE

The \fIREADPE\fR operation retrieves the next prior sequential record from a full procedural file if the key of the record matches the search argument\[char46] If the key of the record does not match the search argument, a \fIBOF\fR condition occurs, and the record is not returned to the program\[char46] A \fIBOF\fR condition also applies when beginning of file occurs\[char46]


The search argument, search-arg , identifies the record to be retrieved\[char46] The search-arg  operand is optional in traditional syntax but required in free-form syntax\[char46] search-arg  can be: 
.IP "" 2
.RS
\[bu] A field name, a literal, a named constant, or a figurative constant\[char46]
.RE
.IP "" 2
.RS
\[bu] A \fIKLIST\fR name for an externally described file\[char46]
.RE
.IP "" 2
.RS
\[bu] A list of key values enclosed in parentheses\[char46] See Figure 2  for an example of searching using a list of key values\[char46]
.RE
.IP "" 2
.RS
\[bu] \fB%KDS\fR to indicate that the search arguments are the subfields of a data structure\[char46] See the example at the end of \fB%KDS\fR (Search Arguments in Data Structure)  for an illustration of search arguments in a data structure\[char46]
.RE
.IP "" 2
.RS
\[bu] \fI*KEY\fR or (in traditional syntax only) no value\[char46] If the full key of the next prior record is equal to that of the current record, the next prior record in the file is retrieved\[char46] The full key is defined by the record format or file used in factor 2\[char46]
.RE
.PP


For keys specified using a \fIKLIST\fR, key fields must have the same \fICCSID\fR as the key in the file\[char46]


The name operand must be the name of the file or record format to be retrieved\[char46] A record format name is allowed only with an externally described file\[char46]


If the data-structure operand is specified, the record is read directly into the data structure\[char46] If name refers to a program-described file, the data structure can be any data structure of the same length as the file\[char39]s declared record length\[char46] If name refers to an externally-described file or a record format from an externally described file, the data structure must be a data structure defined with \fIEXTNAME\fR(\[char46]\[char46]\[char46]:\fI*INPUT\fR or \fI*ALL\fR) or \fILIKEREC\fR(\[char46]\[char46]\[char46]:\fI*INPUT\fR or \fI*ALL\fR)\[char46] See File Operations for information on how to define the data structure and how data is transferred between the file and the data structure\[char46]


If the file from which you are reading is an update disk file, you can specify an N operation extender to indicate that no lock should be placed on the record when it is read\[char46] See the Rational Development Studio for i: \fIILE\fR \fIRPG\fR Programmer\[char39]s Guide for more information\[char46]


To handle \fIREADPE\fR exceptions (file status codes greater than 1000), either the operation code extender \[char39]E\[char39] or an error indicator ER can be specified, but not both\[char46] For more information on error handling, see File Exception/Errors\[char46]


You can specify an indicator in positions 75-76 that will be set on if a \fIBOF\fR condition occurs: that is, if a record is not found with a key equal to the search argument or if a beginning of file is encountered\[char46] This information can also be obtained from the \fB%EOF\fR built-in function, which returns \[char39]1\[char39] if a \fIBOF\fR condition occurs and \[char39]0\[char39] otherwise\[char46]


If there is a record-lock error (status 1218), the file is still positioned at the locked record and the next read operation will attempt to read that record again\[char46] Otherwise, if there is any other error or a beginning of file condition, you must reposition the file (using a \fICHAIN\fR, \fISETLL\fR, or \fISETGT\fR operation)\[char46] See \fICHAIN\fR (Random Retrieval from a File), \fISETGT\fR (Set Greater Than), or \fISETLL\fR (Set Lower Limit)\[char46]


Normally, the comparison between the specified key and the actual key in the file is done by data management\[char46] In some cases this is impossible, causing the comparison to be done using the hexadecimal collating sequence\[char46] This can give different results than expected\[char46] For more information, see the section "Unexpected Results Using Keyed Files" in Rational Development Studio for i: \fIILE\fR \fIRPG\fR Programmer\[char39]s Guide\[char46]


A \fIREADPE\fR with the search-arg operand specified that immediately follows an \fIOPEN\fR operation or a \fIBOF\fR condition returns \fIBOF\fR\[char46] A \fIREADPE\fR with no search-arg specified that immediately follows an \fIOPEN\fR operation or a \fIBOF\fR condition results in an error condition\[char46] The error indicator in positions 73 and 74, if specified, is set on or the \[char39]E\[char39] extender, checked with \fB%ERROR\fR, if specified, is set on\[char46] The file must be repositioned using a \fICHAIN\fR, \fISETLL\fR, \fIREAD\fR, \fIREADE\fR or \fIREADP\fR with search-arg specified, prior to issuing a \fIREADPE\fR operation with factor 1 blank\[char46] A \fISETGT\fR operation code should not be used to position the file prior to issuing a \fIREADPE\fR (with no search-arg specified) as this results in a record-not-found condition (because the record previous to the current record never has the same key as the current record after a \fISETGT\fR is issued)\[char46] If search-arg is specified with the same key for both operation codes, then this error condition will not occur\[char46]


See Database Null Value Support for information on handling records with null-capable fields and keys\[char46]


For more information, see File Operations\[char46]

.SH NOTICE
Note:  If a file is defined as update and the N operation extender is not specified , occasionally a \fIREADPE\fR operation will be forced to wait for a temporary record lock for a record whose key value does not match the search argument\[char46] Once the temporary lock has been obtained, if the key value does not match the search argument, the temporary lock is released\[char46] 
In most cases, \fIRPG\fR can perform \fIREADPE\fR by using system support that does not require obtaining a temporary record lock to determine whether there is a matching record\[char46] However, in other cases, \fIRPG\fR cannot use this support, and must request the next record before it can determine whether the record matches the \fIREADPE\fR request\[char46]

 
Some of the reasons that would require \fIRPG\fR to obtain a temporary lock on the next record for a \fIREADPE\fR operation are: 
.IP "" 2
.RS
\[bu] the key of the current record is not the same as the search argument
.RE
.IP "" 2
.RS
\[bu] the current record is not the same as the requested record
.RE
.IP "" 2
.RS
\[bu] there are null-capable fields in the file
.RE
.IP "" 2
.RS
\[bu] 

 \fIALWNULL\fR(\fI*USRCTL\fR) was specified for the module 


.RE
.IP "" 2
.RS
\[bu] the file has end-of-file delay
.RE
.PP



Note:  Operation code extenders H, M, and R are allowed only when the search argument is a list or is \fB%KDS()\fR\[char46]
.SH EXAMPLE
\fIREADPE\fR Operation
.PP
.nf
*\[char46]\[char46]\[char46]1\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]2\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]3\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]4\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]5\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]6\[char46]\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]7\[char46]\[char46]\[char46]+\[char46]\[char46]\[char46]\[char46]
CL0N01Factor1+++++++Opcode(E)+Factor2+++++++Result++++++++Len++D+HiLoEq\[char46]\[char46]\[char46]\[char46]
 *
 * With Factor 1 Specified\[char46]\[char46]\[char46]
 *
 * The previous record is read and the key compared to FieldA\[char46]
 * Indicator 99 is set on if the record\[char39]s key does not match
 * FieldA\[char46]
C     FieldA        READPE    FileA                                  99
 *
 * The previous record is read from FileB and the key compared
 * to FieldB\[char46]  The record is placed in data structure Ds1\[char46]  If
 * the record key does not match FieldB, indicator 99 is set on\[char46]
C     FieldB        READPE    FileB         Ds1                      99
 *
 * The previous record from record format RecA is read, and
 * the key compared to FieldC\[char46]  Indicator 88 is set on if the
 * operation is not completed successfully, and 99 is set on if
 * the record key does not match FieldC\[char46]
C     FieldC        READPE    RecA                                 8899
 *
 * With No Factor 1 Specified\[char46]\[char46]\[char46]
 *
 * The previous record in the access path is retrieved if its
 * key value equals the key value of the current record\[char46]
 * Indicator 99 is set on if the key values are not equal\[char46]
C                   READPE    FileA                                  99
 *
 * The previous record is retrieved from FileB if its key value
 * matches the key value of the record at the current position
 * in the file\[char46]  The record is placed in data structure Ds1\[char46]
 * Indicator 99 is set on if the key values are not equal\[char46]
C                   READPE    FileB         Ds1                      99
 *
 * The previous record from record format RecA is retrieved if
 * its key value matches the key value of the current record in
 * the access path\[char46]  Indicator 88 is set on if the operation is
 * not successful; 99 is set on if the key values are unequal\[char46]
C                   READPE    RecA                                 8899
.fi
.SH SEE ALSO
.BR %EOF,
.BR %ERROR,
.BR %KDS,
.BR ALWNULL,
.BR BOF,
.BR CCSID,
.BR CHAIN,
.BR ENHMR,
.BR EXTNAME,
.BR ILE,
.BR KLIST,
.BR LIKEREC,
.BR NPUT,
.BR OPEN,
.BR READ,
.BR READE,
.BR READP,
.BR READPE,
.BR RPG,
.BR SETGT,
.BR SETLL,
.BR SRCTL
