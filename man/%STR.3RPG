.\" Copyright 2017 Andreas Louv <andreas@louv.dk>
.\" All content is copyright IBM
.\" Original URL: https://www.ibm.com/support/knowledgecenter/SS4QVT_8.5.1/com.ibm.etools.iseries.langref.doc/evfrilsh877.htm?view=embed
.\"
.\" This man page is generated with ``rpgleman''
.\" Project URL: https://github.com/andlrc/rpgleman
.\"
.TH STR 3RPG  2010-03-10 "ILE RPG Language Reference"
.SH NAME
%STR - Get or Store Null-Terminated String
.SH SYNOPSIS
.nf
%STR(basing pointer{: max-length})(right-hand-side)
%STR(basing pointer : max-length)(left-hand-side)
.fi
.SH DESCRIPTION
\fB%STR\fR is used to create or use null-terminated character strings, which are very commonly used in C and C++ applications\[char46]


The first parameter must be a basing-pointer value\[char46] (Any basing pointer expression is valid, such as "\fB%ADDR(\fIDATA\fR)\fR" or "P+1"\[char46]) The second parameter, if specified, must be a numeric value with zero decimal positions\[char46] If not specified, it defaults to the maximum allowed length for defining a character variable\[char46]


The first parameter must point to storage that is at least as long as the length given by the second parameter\[char46]


Error conditions:


.IP 1. 2
.RS
If the length parameter is less than 1 or greater than the maximum length allowed, an error will occur\[char46]
.RE
.IP 2. 2
.RS
If the pointer is not set, an error will occur\[char46]
.RE
.IP 3. 2
.RS
If the storage addressed by the pointer is shorter than indicated by the length parameter, either An error will occurData corruption will occur\[char46]
.RE
.PP

For more information, see String Operations or Built-in Functions\[char46]



















.SH SEE ALSO
.BR %ADDR (3RPG)
