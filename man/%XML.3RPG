.\" Copyright 2017 Andreas Louv <andreas@louv.dk>
.\" All content is copyright IBM
.\"
.\" This man page is generated with ``rpgleman''
.\" Project URL: https://github.com/andlrc/rpgleman
.\"
.TH XML 3RPG  2010-03-10 "ILE RPG Language Reference"
.SH NAME
%XML - xmlDocument {:options}
.SH DESCRIPTION
\fB%XML\fR is used as the second operand of the \fIXML-SAX\fR and \fIXML-INTO\fR operation codes to specify the \fIXML\fR document to be parsed, and the options to control how the document is parsed\[char46] \fB%XML\fR does not return a value, and it cannot be specified anywhere other than for the \fIXML-SAX\fR and \fIXML-INTO\fR operation codes\[char46]


The first operand specifies the document to be parsed\[char46] It can be a constant or variable character or \fIUCS\fR-2 expression containing either an \fIXML\fR document or the name of a file containing an \fIXML\fR document\[char46]


The second operand specifies options that control how the \fIXML\fR document is to be interpreted and parsed\[char46] It can be a constant or variable character expression\[char46] The value of the character expression is a list of zero or more options specified in the form 


.PP
.nf
    optionname1=value1 optionname2=value2
.fi

No spaces are allowed between the option name and the equal sign or between the equal sign and the value\[char46] However, any number of spaces can appear before, between or following the options\[char46] The options can be specified in any case\[char46] The following are all valid ways to specify the "doc=file" and "allowextra=yes" options for \fIXML-INTO\fR: 


.PP
.nf
   'doc=file allowextra=yes'
   '        doc=file     allowextra=yes     '
   'ALLOWEXTRA=YES DOC=FILE     '
   'AllowExtra=Yes Doc=File     '
.fi

The following are not valid option strings: 




.TS
allbox;
l l  .
T{
\[char39]doc = file\[char39]
T}	T{
Spaces around the equal sign are not allowed
T}
T{
\[char39]allowextra\[char39]
T}	T{
Each option must have an equal sign and a value
T}
T{
\[char39]badopt=yes\[char39]
T}	T{
Only valid options are allowed
T}
T{
\[char39]allowextra=ok\[char39]
T}	T{
The \[char39]allowextra\[char39] value can only be \[char39]yes\[char39] or \[char39]no\[char39]
T}
.TE

The valid options and values depend on the context of the \fB%XML\fR built-in function\[char46] See \fIXML-SAX\fR (Parse an \fIXML\fR Document) and \fIXML-INTO\fR (Parse an \fIXML\fR Document into a Variable) for a complete list of valid options and values\[char46]


When an option is specified more than once, the last value specified is the value that is used\[char46] For example, if the options parameter has the value


.PP
.nf
   'doc=file doc=string'
.fi

 then the parser will use the value "string" for the "doc" option\[char46]


If the parser discovers an invalid option or invalid value, the operation will fail with status code 00352\[char46]



.SH EXAMPLE
Examples of \fB%XML\fR
.PP
.nf
// The "options" parameter is omitted.  Default values are used for
// all options.  Since the default value for the "doc" option is
// always "string", the parser will correctly assume that the first
// parameter contains an XML document.
xmldocument = '<myfld>new value</myfld>';
XML-INTO myfld %XML(xmldocument);

// The "options" parameter is specified as a literal with two options.
XML-INTO myds %XML(xmldocument : 'allowmissing=yes allowextra=yes');

// The "options" parameter is specified as a variable expression
// with two options.
ccsidOpt = 'ccsid=' + %char(ccsid);
XML-SAX %HANDLER(mySaxHandler : myCommArea)
        %XML('myinfo.xml' : 'doc=file ' + ccsidOpt);
.fi

For more examples of \fB%XML\fR, see \fIXML-SAX\fR (Parse an \fIXML\fR Document) and \fIXML-INTO\fR (Parse an \fIXML\fR Document into a Variable)\[char46]


For more information, see \fIXML\fR Operations or Built-in Functions\[char46]



















.SH SEE ALSO
.BR %CHAR (3RPG),
.BR %HANDLER (3RPG)
