.\" Copyright 2017 Andreas Louv <andreas@louv.dk>
.\" All content is copyright IBM
.\" Original URL: https://www.ibm.com/support/knowledgecenter/ssw_ibm_i_73/rzasd/bbparmnum.htm?view=embed
.\"
.\" This man page is generated with ``rpgleman''
.\" Project URL: https://github.com/andlrc/rpgleman
.\"
.TH PARMNUM 3RPG  "June 2012" "ILE RPG Language Reference"
.SH NAME
%PARMNUM - Return Parameter Number
.SH DESCRIPTION


.IP 1. 2
.RS
A parameter defined using a \fI*ENTRY\fR \fIPLIST\fR cannot be specified as the operand for \fB%PARMNUM\fR\[char46]
.RE
.IP 2. 2
.RS
The parameter must be specified the same way it appears in the procedure interface parameter list\[char46] If the parameter is an array, an index cannot be specified\[char46] If the parameter is a data structure, a subfield cannot be specified\[char46] If the parameter is a file, a record format cannot be specified\[char46]
.RE
.IP 3. 2
.RS
If the \fIRTNPARM\fR keyword is coded for a procedure, the return value is handled as an additional first parameter\[char46] The other parameters have a number one higher than the apparent number\[char46] For example, if a procedure defined with \fIRTNPARM\fR has two parameters P1 and P2, \fB%PARMNUM(P1)\fR will return 2 and \fB%PARMNUM(P2)\fR will return 3\[char46]
.RE
.PP

For more information, see Built-in Functions\[char46]

.SH RETURN VALUE
\fB%PARMNUM\fR returns the number of the parameter in the parameter list\[char46] The operand for \fB%PARMNUM\fR is the name of a parameter defined as part of a procedure interface\[char46]

.SH EXAMPLE
Example of \fB%PARMNUM\fR
.PP
.nf
D  myProc         pi            10A   RTNPARM OPDESC
D   companyName                 25A   OPTIONS(*VARSIZE)
D   errorCode                    1A   OPTIONS(*OMIT)
D   cityName                    25A   OPTIONS(*NOPASS)
 /free

    // test the length of companyName
    callp CEEDOD(%parmnum(companyName) : more parameters \[char46]\[char46]\[char46]
               : parmlen : *omit);
    if parmlen < 25;
      // the full parameter was not passed
    endif;

    // test the presence of the omissible errorCode parameter
    callp CEETSTA(isPresent : %parmnum(errorCode) : *omit);
    if isPresent = 1;
       // errorCode was not omitted
    endif;

    // test the presence of the optional city parameter
    if %parms >= %parmnum(cityName);
       // cityName was passed
    endif;
.fi
.SH SEE ALSO
.BR %PARMS (3RPG)
